==========
mongorover
==========
:Info: See `the mongo site <http://www.mongodb.org>`_ for more information. See `github <http://github.com/mongodb/mongo-python-driver/tree>`_ for the latest source.
:Author: Christopher Wang
:Maintainer: Jesse Davis

About
=====

The mongorover module contains tools for interacting with MongoDB databases from Lua. It wraps both the 1.2.0-dev version of the `MongoDB C Driver <https://github.com/mongodb/mongo-c-driver/tree/1.2.0-dev>`_ and `libbson <https://github.com/mongodb/libbson>`_ library. Currently, this driver only provides simple functionality: the basic CRUD operations, aggregation, along with functions such as getDatabaseNames and getCollectionNames. While this driver doesn't provide all the specifications within the `MongoDB Driver CRUD API <https://github.com/mongodb/specifications/blob/master/source/crud/crud.rst>`_, the parts that are implemented do comply with their respective specs.


Bugs / Feature Requests
=======================

Think you’ve found a bug? Want to see a new feature in mongorover? Please open a github issue on this repository.


Please include all of the following information when opening an issue:

- Detailed steps to reproduce the problem, including full traceback, if possible.
- The exact lua version used::

  $ lua -e "print(_VERSION)"

- The exact version of mongorover used::

  $ lua -e "print(require("mongorover")._VERSION)"


Security Vulnerabilities
------------------------

If you’ve identified a security vulnerability in a driver or any other
MongoDB project, please report it according to the `instructions here
<http://docs.mongodb.org/manual/tutorial/create-a-vulnerability-report>`_.

Installation
============

Before installing mongorover, both the MongoDB C Driver and the libbson library . The tested MongoDB C driver is the 1.2.0-dev branch which currently can only be installed from source. On Mac/Linux, it could be done like so:

.. code:: bash

  $ git clone https://github.com/mongodb/mongo-c-driver.git
  $ cd mongo-c-driver
  $ git checkout 1.2.0-dev
  $ git submodule update
  $ ./configure
  $ make
  $ sudo make install

If there are errors, you can refer to the `Mongo C Driver install guide <http://api.mongodb.org/c/current/installing.html#build-yourself>`_. If building on Windows, please refer to the Window specific section.


After installing the above C libraries successfully, if you have `luarocks
<https://luarocks.org/>`_ installed you
should be able to do **luarocks install mongorover** to install
mongorover. Otherwise you can download the project source and do **luarocks make** to install.

Dependencies
============

The mongorover distribution is supported and tested on Lua 5.1.5 and 5.2.3.

Additional dependencies are:

- (for C bindings to interface with MongoDB) `MongoDB C Driver <https://github.com/mongodb/mongo-c-driver/tree/1.2.0-dev>`_

- (to generate documentation) `ldoc <https://github.com/stevedonovan/LDoc>`_
    - (ldoc dependency): `Penlight <https://github.com/stevedonovan/Penlight>`_
        - (Penlight dependency) `LuaFileSystem <http://keplerproject.github.io/luafilesystem/>`_
- (to run the tests) `luaunit <https://github.com/bluebird75/luaunit>`_

Examples
========
A basic use case of using the mongorover driver is below. For more see the *examples* section of the mongorover docs and see the `MongoDB CRUD Tutorial <http://docs.mongodb.org/manual/applications/crud/>`_ and the `MongoDB Aggregation Tutorial <http://docs.mongodb.org/manual/core/aggregation-introduction/>`_.

.. code-block:: lua

  > mongorover = require("mongorover")
  > client = mongorover.MongoClient.new("mongodb://localhost:27017/")
  > database = client:getDatabase("exampleDatabase")
  > collection = database:getCollection("exampleCollection")
  > result = collection:insert_one({x = 10})
  > print(result, result.inserted_id)
  <InsertOneResult object at table: 0x7fdc00f18340> ObjectID("559ff4bbd2b38b17296e56b1")

  > print(collection:insert_one({x = 8}).inserted_id)
  ObjectID("559ff4d0d2b38b17296e56b2")

  > print(collection:insert_one({x = 11}).inserted_id)
  ObjectID("559ff4d6d2b38b17296e56b3")

  > find_results = collection:find({})

  > for result in find_results do
  >> for k,v in pairs(result) do
  >>   print(k,v)
  >> end
  >> end

  _id ObjectID("559ff4bbd2b38b17296e56b1")
  x 10
  _id ObjectID("559ff4d0d2b38b17296e56b2")
  x 8
  _id ObjectID("559ff4d6d2b38b17296e56b3")
  x 11

Documentation
=============

You will need ldoc_ installed to generate the
documentation. Documentation can be generated by running the following command in the source directory:

.. code-block:: bash

    lua [path to ldoc.lua] .

Generated documentation can be found in the *doc/* directory.

Testing
=======

The easiest way to run the tests is to run the following command in the test directory. Note that you will need luaunit_ to run the tests.

.. code-block:: bash

    lua luaUnitTest.lua

